{"version":3,"file":"menuDialog.bbfb8154.js","sources":["../../src/views/system/menu/components/menuDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    v-model=\"formData.visible\"\n    :title=\"formData.title\"\n    width=\"650px\"\n    draggable\n    :destroy-on-close=\"true\"\n    :close-on-click-modal=\"false\"\n  >\n    <el-form :model=\"formData.dialogData\" label-width=\"80px\" inline>\n      <el-form-item label=\"菜单类型\" prop=\"type\">\n        <el-radio-group v-model=\"formData.data.type\">\n          <el-radio-button :label=\"0\">目录</el-radio-button>\n          <el-radio-button :label=\"1\">菜单</el-radio-button>\n          <el-radio-button :label=\"2\">外链</el-radio-button>\n          <el-radio-button :label=\"3\">规则</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type != 3\" label=\"菜单隐藏\">\n        <el-radio-group v-model=\"formData.data.hide\">\n          <el-radio-button label=\"true\">是</el-radio-button>\n          <el-radio-button label=\"false\">否</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"名称\" prop=\"title\">\n        <el-input v-model=\"formData.data.title\" />\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type != 3\" label=\"图标\" prop=\"icon\">\n        <el-input v-model=\"formData.data.icon\" />\n        <!-- <el-popover\n          placement=\"bottom-start\"\n          width=\"450\"\n          trigger=\"click\"\n          @show=\"$refs['iconSelect'].reset()\"\n        >\n          <icon-select ref=\"iconSelect\" @selected=\"selected\" />\n          <el-input\n            slot=\"reference\"\n            v-model=\"formData.data.icon\"\n            placeholder=\"点击选择图标\"\n            style=\"width:450px;\"\n          >\n            <svg-icon\n              v-if=\"formData.data.icon\"\n              slot=\"prefix\"\n              :icon-class=\"formData.data.icon\"\n              class=\"el-input__icon\"\n              style=\"height: 32px;width: 16px;\"\n            />\n            <i v-else slot=\"prefix\" class=\"el-icon-search el-input__icon\" />\n          </el-input>\n        </el-popover>-->\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type == 3\" label=\"权限规则\" prop=\"action\">\n        <el-input v-model=\"formData.data.action\" />\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type != 3\" label=\"路由地址\" prop=\"url\">\n        <el-input v-model=\"formData.data.url\" />\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type == 1\" label=\"是否缓存\">\n        <el-radio-group v-model=\"formData.data.cache\">\n          <el-radio-button label=\"true\">是</el-radio-button>\n          <el-radio-button label=\"false\">否</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type == 1\" label=\"组件名称\" prop=\"name\">\n        <el-input v-model=\"formData.data.name\" placeholder=\"组件内的name\" />\n      </el-form-item>\n      <el-form-item v-if=\"formData.data.type == 1\" label=\"组件路径\" prop=\"path\">\n        <el-input v-model=\"formData.data.path\" placeholder=\"组件的文件路径\" />\n      </el-form-item>\n      <el-form-item label=\"排序\">\n        <el-input-number v-model=\"formData.data.sort\" :min=\"1\" label=\"描述文字\" />\n      </el-form-item>\n      <br>\n      <el-form-item v-if=\"list.length\" label=\"所属目录\">\n        <el-tree\n          node-key=\"id\"\n          :current-node-key=\"formData.data.pid\"\n          :data=\"list\"\n          highlight-current\n          :props=\"{\n            children: 'children',\n            label: 'title',\n          }\"\n          accordion\n          @node-click=\"handleNodeClick\"\n        />\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"formData.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit(formData, 'menu')\">提交</el-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n\n<script lang='ts'>\nimport { defineComponent, reactive, ref } from 'vue';\nimport { handleSubmit } from '@/api/base';\nimport { getMenu } from '@/api/menu';\nimport { useMenuStore } from '@/store/modules/menu';\nimport { cloneDeep } from 'lodash';\n// import IconSelect from \"./IconSelect/index.vue\";\nconst defaultData = {\n  type: 0,\n  icon: '',\n  cache: false,\n  hide: false,\n  title: '',\n  action: '',\n  url: '',\n  sort: 99,\n  name: '',\n  path: '',\n  pid: 0, // 默认选中的节点\n};\nexport default defineComponent({\n  name: 'MenuDialog',\n  components: {\n    // IconSelect\n  },\n  props: {\n    dialogData: {\n      type: Object,\n      default: () => {\n        return {\n          visible: false,\n          title: '',\n          data: {}\n        };\n      }\n    }\n  },\n  setup(props) {\n    let formData = reactive(props.dialogData);\n    if (props.dialogData.type === 'create') formData.data = cloneDeep(defaultData);\n    const menuStore = useMenuStore();\n    let list = reactive<Array<any>>([]);\n\n    const getList = async () => {\n      try {\n        let { code, result } = await getMenu({ attrs: 'id,pid,title,type' });\n        result.sort((a: Menu.MenuRow, b: Menu.MenuRow) => a.sort - b.sort);\n        let topMenus: Menu.MenuRow[] = result.filter((item: Menu.MenuRow) => item.pid === 0 && item.type < 2);\n        let dirAndMenu = result.filter((item: Menu.MenuRow) => item.type < 2);\n        for (const item of topMenus) menuStore.deepMergeMenu(item, dirAndMenu);\n        const rootMenu = {\n          id: 0,\n          pid: -1,\n          title: '根节点',\n          type: 0,\n          children: topMenus\n        };\n        list.push(rootMenu);\n      } catch (error) {\n      }\n    };\n    getList();\n\n    const handleNodeClick = (data: any) => {\n      formData.data.pid = data.id;\n    };\n\n    return {\n      handleNodeClick,\n      list,\n      formData,\n      handleSubmit\n    };\n  }\n});\n</script>\n\n<style lang='less' scoped>\n</style>\n"],"names":["cloneDeep","_withCtx","_createElementVNode","_createVNode","_openBlock","_createBlock"],"mappings":"0dA0GA,KAAA,GAAA,CAAoB,KAAA,EACZ,KAAA,GACA,MAAA,GACC,KAAA,GACD,MAAA,GACC,OAAA,GACC,IAAA,GACH,KAAA,GACC,KAAA,GACA,KAAA,GACA,IAAA,CAER,EACA,EAAA,EAAA,CAA+B,KAAA,aACvB,WAAA,CAAA,EAGN,MAAA,CACO,WAAA,CACO,KAAA,OACJ,QAAA,IAEJ,EAAO,QAAA,GACI,MAAA,GACF,KAAA,CAAA,CACA,EAEX,CACF,EACF,MAAA,EAAA,CAEE,GAAA,GAAA,EAAA,EAAA,UAAA,EACA,AAAA,EAAA,WAAA,OAAA,UAAwC,GAAA,KAAAA,oBAAA,CAAA,GACxC,KAAA,GAAA,IACA,GAAA,GAAA,EAAA,CAAA,CAAA,EAoBA,MAlBA,UAAA,CACE,GAAA,CACE,GAAA,CAAA,OAAA,UAAA,KAAA,GAAA,CAAA,MAAA,mBAAA,CAAA,EACA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EACA,GAAA,GAAA,EAAA,OAAA,AAAA,GAAA,EAAA,MAAA,GAAA,EAAA,KAAA,CAAA,EACA,EAAA,EAAA,OAAA,AAAA,GAAA,EAAA,KAAA,CAAA,EACA,SAAA,KAAA,GAA6B,EAAA,cAAA,EAAA,CAAA,EAC7B,KAAA,GAAA,CAAiB,GAAA,EACX,IAAA,GACC,MAAA,qBACE,KAAA,EACD,SAAA,CACI,EAEZ,EAAA,KAAA,CAAA,CAAkB,MAAA,CAClB,CACF,KAQF,CAAO,gBAJP,AAAA,GAAA,CACE,EAAA,KAAA,IAAA,EAAA,EAAyB,EAIzB,OACA,WACA,cACA,CACF,CAEJ,CAAA,iKAlFY,EAAA,CAAA,MAAA,2IAKE,WAAA,EAAA,SAAA,QA9FQ,sBAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,SAAA,QAAA,GAAO,MAAA,EAAA,SAAA,MACR,MAAA,QACX,UAAA,GACN,mBAAA,GACmB,uBAAA,EACI,EAAA,CAmFZ,OAAAC,EAAA,IAAA,CAIFC,EAAA,OAAA,EAAA,CAAAC,EAAA,EAAA,CAFsD,QAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,SAAA,QAAA,GAAxB,EAAA,gBAAY,eACiC,KAAA,UAAhE,QAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,aAAA,EAAA,SAAA,MAAA,EAAuC,EAAA,gBAAa,6BAJ9DA,EAAA,EAAA,CAAA,MAAA,EAAA,SAAA,WAhFgB,cAAA,OAAwB,OAAA,EAAO,EAAA,gBAQxCA,EAAA,EAAA,CAAA,MAAA,2BAPK,KAAA,MAAY,EAAA,gBAMbA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,KALsB,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,KAAA,EAAI,EAAA,gBACOA,EAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAtB,QAAAF,EAAA,IAAA,CAAI,yBACJ,QAAAA,EAAA,IAAA,CAAI,yBACJ,QAAAA,EAAA,IAAA,CAAI,yBACJ,QAAAA,EAAA,IAAA,CAAI,6EAQnB,IAAA,kCALoC,EAAA,gBAIhCE,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,KAHsB,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,KAAA,EAAI,EAAA,gBACQA,EAAA,EAAA,CAAA,MAAA,MAAA,EAAA,CAApB,QAAAF,EAAA,IAAA,CAAE,+BACD,QAAAA,EAAA,IAAA,CAAE,0DAKrB,MAAA,eAFK,KAAA,OAAU,EAAA,gBACcE,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,MAAT,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,MAAA,EAAK,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,4CA2BzB,IAAA,uBAzBoC,KAAA,MAAU,EAAA,gBAClBA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,KAAR,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,KAAA,EAAI,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,sDA2BxB,IAAA,mCAFoC,KAAA,QAAY,EAAA,gBAClBA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,OAAV,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,OAAA,EAAM,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,sDAI1B,IAAA,mCAFoC,KAAA,KAAY,EAAA,gBACrBA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,IAAP,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,IAAA,EAAG,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,sDAOvB,IAAA,kCALoC,EAAA,gBAIhCA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,MAHsB,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,MAAA,EAAK,EAAA,gBACOA,EAAA,EAAA,CAAA,MAAA,MAAA,EAAA,CAApB,QAAAF,EAAA,IAAA,CAAE,+BACD,QAAAA,EAAA,IAAA,CAAE,uFAKrB,IAAA,mCAFoC,KAAA,MAAY,EAAA,gBACGE,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,KAA/B,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,KAAA,GAAI,YAAA,8BAAc,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,sDAItC,IAAA,mCAFoC,KAAA,MAAY,EAAA,gBACEA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,KAA9B,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,KAAA,GAAI,YAAA,4CAAc,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,gDAE7B,QAAAF,EAAA,IAAA,CACgDE,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,KAAA,KAA9B,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,SAAA,KAAA,KAAA,GAAI,IAAA,EAAQ,MAAA,0BAAS,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,UAE/D,EAAA,EAAA,KAAA,OAAAC,GAAA,EAAAC,EAAA,EAAA,CAce,IAAA,kCAbwB,EAAA,gBAYnCF,EAAA,EAAA,CAAA,WAAA,KAVS,mBAAA,EAAA,SAAA,KAAA,IACwB,KAAA,EAAA,KAC1B,oBAAA,GACP,MAAA,CACQ,SAAA,0BAIR,UAAA,GAAA,YAAA,EAAA,eACa,EAAA,KAAA,EAAA,CAAA,mBAAA,OAAA,aAAA,CAAA"}