{"version":3,"file":"menu.6a4b92b4.js","sources":["../../src/views/system/menu/menu.vue"],"sourcesContent":["<template>\n  <div class=\"page-main\">\n    <div class=\"operate-box\">\n      <div class=\"operate-btns\">\n        <el-button type=\"primary\" @click=\"openDialog(dialogData, '新增菜单')\">新增</el-button>\n      </div>\n      <el-button\n        type=\"primary\"\n        icon=\"Refresh\"\n        @click=\"() => { form.resetFields(); getList(false) }\"\n      />\n    </div>\n\n    <div class=\"filter-box\">\n      <el-form ref=\"form\" class=\"filter-form\" :model=\"list.query\" label-width=\"80px\" inline>\n        <el-form-item label=\"名称\" prop=\"title\">\n          <el-input v-model=\"list.query.title\" />\n        </el-form-item>\n        <el-form-item label=\"权限\" prop=\"level\">\n          <el-input v-model=\"list.query.action\" />\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"type\">\n          <el-input v-model=\"list.query.type\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"getList(true)\">搜索</el-button>\n          <el-button type=\"primary\" @click=\"() => { form.resetFields(); }\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <el-table\n      v-loading=\"list.load\"\n      :data=\"list.data\"\n      border\n      size=\"small\"\n      row-key=\"id\"\n      :default-expand-all=\"true\"\n      lazy\n      style=\"width: 100%\"\n      :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\n      @selection-change=\"(selection) => { selectList = selection.map((item: Menu.MenuRow) => item.id) }\"\n    >\n      <el-table-column type=\"selection\" />\n      <el-table-column prop=\"title\" label=\"名称\" align=\"center\" />\n      <el-table-column prop=\"icon\" label=\"图标\" align=\"center\">\n        <template #default=\"scope\">\n          <i :class=\"'iconfont ' + scope.row.icon\" />\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"sort\" label=\"排序\" align=\"center\" width=\"60\" />\n      <el-table-column prop=\"action\" label=\"权限规则\" align=\"center\" />\n      <el-table-column prop=\"path\" label=\"组件路径\" align=\"center\" />\n      <el-table-column prop=\"cache\" label=\"缓存\" align=\"center\">\n        <template #default=\"scope\">{{ scope.row.cache == true ? '是' : '否' }}</template>\n      </el-table-column>\n      <el-table-column prop=\"hide\" label=\"菜单隐藏\" align=\"center\">\n        <template #default=\"scope\">{{ scope.row.hide ? '是' : '否' }}</template>\n      </el-table-column>\n      <el-table-column prop=\"type\" label=\"类型\" align=\"center\">\n        <template #default=\"scope\">\n          <el-tag v-if=\"scope.row.type === 0\" type=\"success\" effect=\"plain\">目录</el-tag>\n          <el-tag v-if=\"scope.row.type === 1\" effect=\"plain\">菜单</el-tag>\n          <el-tag v-if=\"scope.row.type === 2\" effect=\"plain\">外链</el-tag>\n          <el-tag v-if=\"scope.row.type === 3\" type=\"info\" effect=\"plain\">规则</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\" align=\"center\">\n        <template #default=\"scope\">\n          <el-button @click=\"openDialog(dialogData, '编辑菜单', scope.row)\">编辑</el-button>\n          <el-button type=\"danger\" @click=\"handleDelete([scope.row.id], 'menu')\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <menu-dialog v-if=\"dialogData.visible\" :dialog-data=\"dialogData\" />\n  </div>\n</template>\n\n<script lang='ts'>\nimport { getMenu } from '@/api/menu';\nimport { defineComponent, reactive, ref } from 'vue';\nimport { openDialog, handleDelete } from '@/api/base';\nimport { emitter } from '@/utils/mitt';\nimport { useMenuStore } from '@/store/modules/menu';\nimport MenuDialog from './components/menuDialog.vue';\nimport { toast } from '@/utils/message';\n\nexport default defineComponent({\n  name: \"Menu\",\n  components: { MenuDialog },\n  setup() {\n    const menuStore = useMenuStore();\n    let form = ref();\n    let dialogData = reactive<DialogData<Role.RoleRow | {}>>({\n      visible: false,\n      title: \"\",\n      data: {\n        type: 0,\n        icon: '',\n        cache: false,\n        hide: false,\n        title: '',\n        action: '',\n        url: '',\n        sort: 99,\n        name: '',\n        path: '',\n        pid: 0, // 默认选中的节点\n      }\n    });\n    let list = reactive<TableList<any>>({\n      data: [],\n      load: false,\n      query: {\n        limit: 20,\n        page: 1,\n        total: 0,\n        title: \"\",\n        action: \"\",\n        type: \"\",\n        attrs: 'all'\n      }\n    });\n    let selectList = reactive<Array<number>>([]);\n\n    const getList = async (cache: boolean) => {\n      try {\n        list.load = true;\n        let { code, result } = await getMenu(list.query, cache);\n        result.sort((a: Menu.MenuRow, b: Menu.MenuRow) => a.sort - b.sort);\n        let topMenus = result.filter((item: Menu.MenuRow) => item.pid === 0);\n        for (const item of topMenus) menuStore.deepMergeMenu(item, result);\n        list.data = topMenus;\n        list.load = false;\n      } catch (error) {\n        list.load = false;\n      }\n    };\n    getList(true);\n\n    emitter.on(\"list-reload\", (module) => {\n      if (module === \"menu\")\n        getList(false);\n    });\n    return {\n      selectList,\n      list,\n      form,\n      dialogData,\n      getList,\n      openDialog,\n      handleDelete\n    };\n  }\n});\n</script>\n\n<style lang='less' scoped>\n</style>\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","_createVNode","_withCtx","_normalizeClass","_createTextVNode","_toDisplayString","_createBlock","_createCommentVNode"],"mappings":"0fAwFA,KAAA,GAAA,EAAA,CAA+B,KAAA,OACvB,WAAA,CAAA,YAAA,EACmB,OAAA,CAEvB,KAAA,GAAA,IACA,GAAA,GAAA,IACA,EAAA,EAAA,CAAyD,QAAA,GAC9C,MAAA,GACF,KAAA,CACD,KAAA,EACE,KAAA,GACA,MAAA,GACC,KAAA,GACD,MAAA,GACC,OAAA,GACC,IAAA,GACH,KAAA,GACC,KAAA,GACA,KAAA,GACA,IAAA,CACD,CACP,CAAA,EAEF,EAAA,EAAA,CAAoC,KAAA,CAAA,EAC3B,KAAA,GACD,MAAA,CACC,MAAA,GACE,KAAA,EACD,MAAA,EACC,MAAA,GACA,OAAA,GACC,KAAA,GACF,MAAA,KACC,CACT,CAAA,EAEF,EAAA,EAAA,CAAA,CAAA,EAEA,KAAA,GAAA,KAAA,IAAA,CACE,GAAA,CACE,EAAA,KAAA,GACA,GAAA,CAAA,OAAA,UAAA,KAAA,GAAA,EAAA,MAAA,CAAA,EACA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EACA,GAAA,GAAA,EAAA,OAAA,AAAA,GAAA,EAAA,MAAA,CAAA,EACA,SAAA,KAAA,GAA6B,EAAA,cAAA,EAAA,CAAA,EAC7B,EAAA,KAAA,EACA,EAAA,KAAA,EAAY,MAAA,CAEZ,EAAA,KAAA,EAAY,CACd,EAEF,SAAA,EAAA,EAEA,EAAA,GAAA,cAAA,AAAA,GAAA,CACE,AAAA,IAAA,QACE,EAAA,EAAA,CAAa,CAAA,EAEjB,CAAO,aACL,OACA,OACA,aACA,UACA,aACA,cACA,CACF,CAEJ,CAAA,EA1JO,EAAA,CAAA,MAAA,aACE,EAAA,CAAA,MAAA,eACE,EAAA,CAAA,MAAA,oCAUF,EAAA,CAAA,MAAA,uQAZP,MAAAA,GAAA,EAAAC,EAAA,MAAA,EAAA,CA2EMC,EAAA,MAAA,EAAA,CAjEEA,EAAA,MAAA,EAAA,CANEC,EAAA,EAAA,CAD4E,KAAA,UAAhE,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,WAAA,EAAA,WAAA,0BAAA,EAAuC,EAAA,gBAAa,iBAMpE,KAAA,UAHK,KAAA,UACA,QAAA,EAAA,IAAA,GAAA,GAAA,IAAA,CACW,EAAA,KAAA,cAAoB,EAAA,QAAA,EAAA,CAAO,EAAA,CAAA,IAI/CD,EAAA,MAAA,EAAA,CAgBMC,EAAA,EAAA,CADM,IAAA,OAdG,MAAA,cAAa,MAAA,EAAA,KAAA,MAA2B,cAAA,OAAmB,OAAA,EAAO,EAAA,gBAG9DA,EAAA,EAAA,CAAA,MAAA,eAFK,KAAA,OAAU,EAAA,gBACWA,EAAA,EAAA,CAAA,WAAA,EAAA,KAAA,MAAA,MAAT,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,KAAA,MAAA,MAAA,EAAK,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,eAItB,MAAA,eAFK,KAAA,OAAU,EAAA,gBACYA,EAAA,EAAA,CAAA,WAAA,EAAA,KAAA,MAAA,OAAV,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,KAAA,MAAA,OAAA,EAAM,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,eAIvB,MAAA,eAFK,KAAA,MAAU,EAAA,gBACUA,EAAA,EAAA,CAAA,WAAA,EAAA,KAAA,MAAA,KAAR,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,KAAA,MAAA,KAAA,EAAI,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,oBAKrB,QAAAC,EAAA,IAAA,CAFkDD,EAAA,EAAA,CAAA,KAAA,UAA/C,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,EAAA,EAAyB,EAAA,gBAAU,eAC4B,KAAA,UAA/D,QAAA,EAAA,IAAA,GAAA,GAAA,IAAA,CAA0B,EAAA,KAAA,aAAgB,EAAA,EAAA,gBAAS,qDA+C9D,KAAA,EAAA,KAAA,KAxCG,OAAA,GACZ,KAAA,QACK,UAAA,KACG,qBAAA,GACa,KAAA,GACrB,MAAA,CAAA,MAAA,MAAA,EACA,aAAA,CAAA,SAAA,WAAA,YAAA,aAAA,EACa,kBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,CACuB,EAAA,WAAA,EAAA,IAAA,AAAA,GAAA,EAAA,EAAA,CAA0D,EAAA,EAAA,gBAE1DA,EAAA,EAAA,CAAA,KAAA,WAAA,CAAA,EAAHA,EAAA,EAAA,CACyB,KAAA,QAApC,MAAA,eAAc,MAAA,QAAW,CAAA,OAK7B,KAAA,OAJI,MAAA,eAAa,MAAA,QAAW,EAAA,eACnBD,EAAA,IAAA,CACoB,MAAAG,EAAA,YAAA,EAAA,IAAA,IAAA,CAAJ,EAAA,KAAA,CAAA,eAGyB,KAAA,OAA9C,MAAA,eAAa,MAAA,SAAW,MAAA,IAAe,CAAA,OACA,KAAA,SAAvC,MAAA,2BAAe,MAAA,QAAa,CAAA,OACS,KAAA,OAArC,MAAA,2BAAa,MAAA,QAAa,CAAA,OAG9B,KAAA,QAFI,MAAA,eAAc,MAAA,QAAW,EAAA,eACpBC,EAAAC,EAAA,EAAA,IAAA,OAAA,GAAA,SAAA,QAAA,EAAA,CAAA,CAAoB,CAAA,aAI7B,KAAA,OAFI,MAAA,2BAAa,MAAA,QAAa,EAAA,eACrBD,EAAAC,EAAA,EAAA,IAAA,KAAA,SAAA,QAAA,EAAA,CAAA,CAAmB,CAAA,aAS5B,KAAA,OAPI,MAAA,eAAa,MAAA,QAAW,EAAA,eACnB,EAAA,IAAA,OAAA,EAAAP,GAAA,EAAAQ,EAAA,EAAA,CACsD,IAAA,iBAApC,OAAA,OAAiB,EAAA,gBAAU,8CACN,IAAA,gBAAnB,EAAA,gBAAU,8CACS,IAAA,gBAAnB,EAAA,gBAAU,8CACqB,IAAA,cAAjC,OAAA,OAAc,EAAA,gBAAU,kCAQnD,MAAA,QALK,MAAA,eAAc,MAAA,QAAW,EAAA,eACrBL,EAAA,EAAA,CACqD,QAAA,AAAA,GAAA,EAAA,WAAA,EAAA,WAAA,2BAAA,EAAA,GAAA,CAAjB,EAAA,gBAAK,iCACqB,KAAA,SAArE,QAAA,AAAA,GAAA,EAAA,aAAA,CAAA,EAAA,IAAA,EAAA,EAAA,MAAA,CAA2C,EAAA,gBAAc,yDAtClE,CAAA,EAAA,EAAA,KAAA,IAAA,CAAS,CAAA,EA2CH,EAAA,WAAA,QAAAH,GAAA,EAAAQ,EAAA,EAAA,CAAgD,IAAA,4BAAd,EAAA,KAAA,EAAA,CAAA,aAAA,CAAA,GAAAC,EAAA,GAAA,EAAA"}